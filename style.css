let map = L.map("map").setView([7.8731, 80.7718], 7);

// Add basemap
L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
  attribution: "&copy; OpenStreetMap contributors"
}).addTo(map);

let geojsonLayer;
let chart;

function onEachFeature(feature, layer) {
  layer.on({
    click: function (e) {
      const districtName = feature.properties.DISTRICT || feature.properties.district;
      document.getElementById("district-name").textContent = districtName;
      highlightDistrict(e.target);
      showChart(districtName);
    },
    mouseover: function (e) {
      e.target.setStyle({ weight: 3, color: "#ff9900", fillOpacity: 0.6 });
    },
    mouseout: function (e) {
      geojsonLayer.resetStyle(e.target);
    }
  });
}

function highlightDistrict(layer) {
  geojsonLayer.eachLayer(l => geojsonLayer.resetStyle(l));
  layer.setStyle({ color: "#ff0000", weight: 3, fillOpacity: 0.4 });
}

function showChart(districtName) {
  const years = Array.from({ length: 23 }, (_, i) => 2001 + i);
  const fakeData = years.map(() => Math.floor(Math.random() * 1000)); // Replace with real data if you have CSV
  
  if (chart) chart.destroy();

  chart = new Chart(document.getElementById("forestChart"), {
    type: "bar",
    data: {
      labels: years,
      datasets: [{
        label: "Forest Loss (ha)",
        backgroundColor: "#26a69a",
        data: fakeData
      }]
    },
    options: {
      responsive: true,
      scales: {
        y: { beginAtZero: true }
      }
    }
  });
}

// Load GeoJSON
fetch("data/sri_lanka_districts.geojson")
  .then(res => res.json())
  .then(data => {
    geojsonLayer = L.geoJSON(data, {
      style: {
        color: "#3388ff",
        weight: 2,
        fillOpacity: 0.2
      },
      onEachFeature: onEachFeature
    }).addTo(map);
  });
